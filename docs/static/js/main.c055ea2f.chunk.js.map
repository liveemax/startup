{"version":3,"sources":["api/userApi.jsx","styles/styles.jsx","components/Navbar.jsx","assets/img/cross.svg","components/EmptyRouter.jsx","pages/Empty.jsx","components/Aside.jsx","components/PaginateItem.jsx","components/Repositories.jsx","components/Content.jsx","pages/User.jsx","routers/routes.jsx","routers/AppRoutes.jsx","App.jsx","index.jsx"],"names":["url","error","getUser","user","a","fetch","result","json","console","log","Error","getRepos","NavbarHeader","styled","header","props","theme","primary","NavbarGithub","div","NavbarForm","form","icons","AppContainer","AppSpinner","EmptyContainer","EmptyText","UserMain","main","UserAside","aside","UserAsideImg","p","UserAsideIcons","UserAsideContent","UserRepos","UserReposTitle","UserItems","UserItem","UserPagination","Navbar","useContext","Trigger","notFound","setLocalSpinner","localPath","setLocalPath","searchInput","setSearchInput","icon","faGithub","faSearch","autoComplete","onChange","e","currentTarget","value","id","type","onKeyDown","code","userApi","repos","Promise","all","then","sessionStorage","setItem","JSON","stringify","process","message","preventDefault","to","pathname","EmptyRouter","localUser","setLocalIcon","setLocalText","localIcon","localText","parse","getItem","useEffect","length","src","cross","alt","login","faUser","Empty","setLocalUser","Aside","avatar_url","name","followers","following","html_url","href","target","rel","faUserFriends","PaginateItem","Repositories","localRepoPage","localRepoSize","setLocalStartRepos","setLocalEndRepos","setLocalAllPage","startRepos","endRepos","allPage","setLocalRepoPage","endReposBuffer","Math","abs","display","style","map","el","ind","svn_url","description","previousLabel","faChevronLeft","nextLabel","faChevronRight","pageCount","onPageChange","page","selected","initialPage","marginPagesDisplayed","pageRangeDisplayed","breakLabel","breakClassName","containerClassName","activeClassName","Content","User","publicRoutes","path","Component","AppRouter","component","exact","React","createContext","App","useState","localSpinner","setLocalRepoSize","window","addEventListener","removeItem","Provider","faSpinner","spin","AppRoutes","ReactDOM","render","text","background","document","getElementById"],"mappings":"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","file":"static/js/main.c055ea2f.chunk.js","sourcesContent":["const url = `https://api.github.com/users`;\nconst error = `Error in userApi`;\n\nexport const getUser = async (user) => {\n  try {\n    let result = await fetch(`${url}/${user}`);\n    result = result.json();\n    return result;\n  } catch (e) {\n    console.log(new Error(`${error} get`));\n  }\n};\n\nexport const getRepos = async (user) => {\n  try {\n    let result = await fetch(`${url}/${user}/repos`);\n    result = result.json();\n    return result;\n  } catch (e) {\n    console.log(new Error(`${error} get`));\n  }\n};\n","import styled from 'styled-components';\n\n//Navbar\n\nexport const NavbarHeader = styled.header`\n  background-color: ${(props) => props.theme.primary};\n  font-size: 0.9rem;\n  min-height: 72px;\n  display: flex;\n  align-items: center;\n  padding-left: 40px;\n`;\n\nexport const NavbarGithub = styled.div`\n  color: #fff;\n  font-size: 40px;\n  @media (max-width: 960px) {\n    display: none;\n  }\n`;\n\nexport const NavbarForm = styled.form`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  margin-left: 1.5rem;\n  svg {\n    position: absolute;\n    top: 50%;\n    left: 10px;\n    color: ${(props) => props.theme.icons};\n    font-size: 16px;\n    transform: translate(0, -50%);\n  }\n  input {\n    max-width: 500px;\n    width: 100%;\n    height: 20px;\n    padding: 8px 14px 8px 30px;\n    border-radius: 6px;\n    border: none;\n    outline: none;\n  }\n  @media (max-width: 960px) {\n    max-width: 50%;\n  }\n`;\n\n//App\n\nexport const AppContainer = styled.div`\n  height: 100vh;\n`;\nexport const AppSpinner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: tomato;\n  font-size: 50px;\n  text-align: center;\n`;\n\n//Empty\n\nexport const EmptyContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: ${(props) => props.theme.icons};\n  font-size: 1.5rem;\n  max-width: 243px;\n  text-align: center;\n  svg {\n    font-size: 90px;\n    margin-bottom: 20px;\n  }\n`;\nexport const EmptyText = styled.div`\n  img {\n    margin-bottom: 20px;\n  }\n`;\n\n//User\n\nexport const UserMain = styled.main`\n  margin: 40px 56px;\n  height: calc(100vh - 120px);\n  display: flex;\n  flex-wrap: wrap;\n  @media (max-width: 960px) {\n    margin: 10px;\n  }\n`;\nexport const UserAside = styled.aside`\n  width: 20%;\n  padding: 0 5px;\n  min-width: 250px;\n  img {\n    border-radius: 100%;\n    width: 100%;\n  }\n  a {\n    color: ${(props) => props.theme.primary};\n    font-size: 1.2rem;\n    text-decoration: none;\n  }\n  @media (max-width: 960px) {\n    margin: auto;\n    width: 50%;\n  }\n  @media (max-width: 700px) {\n    width: 70%;\n  }\n`;\nexport const UserAsideImg = styled.p`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 28px 0 10px;\n`;\nexport const UserAsideIcons = styled.p`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 25px;\n  svg {\n    margin-right: 10px;\n    color: ${(props) => props.theme.icons};\n  }\n`;\nexport const UserAsideContent = styled.div`\n  width: calc(80% - 180px);\n  position: relative;\n  margin-left: 80px;\n  @media (max-width: 960px) {\n    width: 90%;\n    margin: 20px 0 0;\n  }\n`;\nexport const UserRepos = styled.div`\n  .pagination {\n    list-style: none;\n    display: flex;\n    li {\n      margin-left: 5px;\n    }\n\n    li a {\n      width: 20px;\n      height: 25px;\n      cursor: pointer;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    li:hover a,\n    .active a {\n      background-color: ${(props) => props.theme.primary};\n      color: #fff;\n      border-radius: 3px;\n    }\n\n    .next:hover a,\n    .previous:hover a {\n      background-color: transparent;\n      color: ${(props) => props.theme.primary};\n      border-radius: 3px;\n    }\n  }\n`;\n\nexport const UserReposTitle = styled.div`\n  font-size: 32px;\n  font-weight: 600;\n`;\n\nexport const UserItems = styled.div`\n  font-size: 32px;\n  font-weight: 600;\n  margin-top: 30px;\n`;\n\nexport const UserItem = styled.div`\n  padding: 10px 0 0 32px;\n  width: 95%;\n  height: 100px;\n  background-color: #fff;\n  margin-bottom: 24px;\n  overflow: auto;\n  a {\n    font-size: 24px;\n    font-weight: 500;\n    text-decoration: none;\n  }\n\n  p {\n    font-size: 16px;\n    font-weight: 400;\n    margin-top: 16px;\n  }\n`;\nexport const UserPagination = styled.div`\n  color: ${(props) => props.theme.icons};\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport * as userApi from '../api/userApi';\nimport { Trigger } from '../App';\nimport { NavbarForm, NavbarGithub, NavbarHeader } from '../styles/styles';\n\nconst Navbar = () => {\n  const {\n    notFound,\n    setLocalSpinner,\n    localPath,\n    setLocalPath,\n    searchInput,\n    setSearchInput,\n  } = useContext(Trigger);\n  return (\n    <NavbarHeader>\n      <NavbarGithub>\n        <FontAwesomeIcon icon={faGithub} />\n      </NavbarGithub>\n      <NavbarForm>\n        <label>\n          <FontAwesomeIcon icon={faSearch} />\n          <input\n            autoComplete=\"off\"\n            onChange={(e) => {\n              setSearchInput(e.currentTarget.value);\n            }}\n            id=\"search\"\n            type=\"text\"\n            value={searchInput}\n            onKeyDown={(e) => {\n              if (e.code === 'Enter') {\n                setLocalSpinner(true);\n                const user = userApi.getUser(`${searchInput}`);\n                const repos = userApi.getRepos(`${searchInput}`);\n                Promise.all([user, repos]).then((result) => {\n                  sessionStorage.setItem('user', JSON.stringify(result[0]));\n                  sessionStorage.setItem('repos', JSON.stringify(result[1]));\n                  setLocalSpinner(false);\n                  setLocalPath(`${process.env.REACT_APP_USER_ROUTE}`);\n                  if (result[0].message === notFound) setLocalPath(`${process.env.REACT_APP_HOME_ROUTE}`);\n                });\n                e.preventDefault();\n                setSearchInput('');\n              }\n            }}\n          />\n        </label>\n      </NavbarForm>\n      <Redirect to={{ pathname: `${localPath}` }} />\n    </NavbarHeader>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/cross.69462986.svg\";","import React, { useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport cross from '../assets/img/cross.svg';\nimport { EmptyText } from '../styles/styles';\nimport { Trigger } from '../App';\n\nconst EmptyRouter = () => {\n  const {\n    localUser,\n      localPath,\n    setLocalPath,\n    notFound,\n    setLocalIcon,\n    setLocalText,\n    localIcon,\n    localText,\n  } = useContext(Trigger);\n  const repos = JSON.parse(sessionStorage.getItem('repos'));\n  useEffect(() => {\n    if (localPath === process.env.REACT_APP_USER_ROUTE && repos.length === 0) {\n      setLocalIcon(<img src={cross} alt=\"empty repos\" />);\n      setLocalText('Repository list is empty');\n      return;\n    }\n    if (localPath === process.env.REACT_APP_USER_ROUTE) {\n      setLocalIcon('');\n      setLocalText('');\n    }\n    if (localUser) {\n      if (localUser.login) {\n        setLocalPath(`${process.env.REACT_APP_USER_ROUTE}`);\n        return;\n      }\n      if (localUser === notFound) {\n        setLocalIcon(<FontAwesomeIcon icon={faUser} />);\n        setLocalText('User not found');\n      }\n    }\n  }, [localUser]);\n  return (\n    <EmptyText>\n      <div>{localIcon}</div>\n      <div>{localText}</div>\n    </EmptyText>\n  );\n};\n\nexport default EmptyRouter;\n","import React, { useContext, useEffect } from 'react';\nimport { Trigger } from '../App';\nimport EmptyRouter from '../components/EmptyRouter';\nimport { EmptyContainer } from '../styles/styles';\n\nfunction Empty() {\n  const { setLocalUser, notFound } = useContext(Trigger);\n  const getUser = JSON.parse(sessionStorage.getItem('user'));\n  useEffect(() => {\n    if (getUser.message === notFound) {\n      setLocalUser(notFound);\n      return;\n    }\n    setLocalUser(getUser);\n  }, []);\n  return (\n    <EmptyContainer>\n      <EmptyRouter />\n    </EmptyContainer>\n  );\n}\n\nexport default Empty;\n","import React from 'react';\nimport { faUserFriends, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { UserAside, UserAsideIcons, UserAsideImg } from '../styles/styles';\n\nfunction Aside() {\n  const user = JSON.parse(sessionStorage.getItem('user'));\n  const { avatar_url, name, login, followers, following, html_url } =\n    user || '';\n  return (\n    <UserAside>\n      <img src={avatar_url} alt=\"user\" />\n      <UserAsideImg>{name || ''}</UserAsideImg>\n      <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n        {login}\n      </a>\n      <UserAsideIcons>\n        <span>\n          <FontAwesomeIcon icon={faUserFriends} />\n          {followers} followers\n        </span>\n        <span>\n          <FontAwesomeIcon icon={faUser} />\n          {following} following\n        </span>\n      </UserAsideIcons>\n    </UserAside>\n  );\n}\n\nexport default Aside;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction PaginateItem(props) {\n  const { icon } = props;\n  return <FontAwesomeIcon icon={icon} />;\n}\n\nexport default PaginateItem;\n","import React, { useContext, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport PaginateItem from './PaginateItem';\nimport {\n  UserItem,\n  UserItems,\n  UserPagination,\n  UserRepos,\n  UserReposTitle,\n} from '../styles/styles';\nimport { Trigger } from '../App';\n\nfunction Repositories() {\n  let repos = JSON.parse(sessionStorage.getItem('repos')) || '';\n  const {\n    notFound,\n    localRepoPage,\n    localRepoSize,\n    setLocalStartRepos,\n    setLocalEndRepos,\n    setLocalAllPage,\n    startRepos,\n    endRepos,\n    allPage,\n    setLocalRepoPage,\n  } = useContext(Trigger);\n  useEffect(() => {\n    const endReposBuffer=localRepoPage * localRepoSize - 1\n    setLocalStartRepos((localRepoPage - 1) * localRepoSize);\n    setLocalEndRepos(\n        endReposBuffer <= repos.length\n        ? endReposBuffer\n        : repos.length - 1\n    );\n    setLocalAllPage(Math.abs(repos.length / localRepoSize));\n  }, [localRepoPage, localRepoSize]);\n  let display = { display: 'block' };\n  if (repos.length === 0) display = { display: 'none' };\n  if (repos.message === notFound) repos = [];\n  return (\n    <UserRepos style={display}>\n      <UserReposTitle>Repositories ({`${repos.length}`})</UserReposTitle>\n      <UserItems>\n        {repos.map((el, ind) => {\n          const { name, svn_url, description } = el;\n          if (ind >= startRepos && ind <= endRepos)\n            return (\n              <UserItem key={name}>\n                <a href={svn_url} target=\"_blank\" rel=\"noreferrer\">\n                  {name}\n                </a>\n                <p>{description}</p>\n              </UserItem>\n            );\n          return undefined;\n        })}\n      </UserItems>\n      <UserPagination>\n        <p>{`${startRepos + 1}-${endRepos + 1} of ${repos.length} items`}</p>\n        <ReactPaginate\n          previousLabel={<PaginateItem icon={faChevronLeft} />}\n          nextLabel={<PaginateItem icon={faChevronRight} />}\n          pageCount={allPage}\n          onPageChange={(page) => {\n            setLocalRepoPage(page.selected + 1);\n          }}\n          initialPage={localRepoPage - 1}\n          marginPagesDisplayed={1}\n          pageRangeDisplayed={2}\n          breakLabel=\"...\"\n          breakClassName=\"break-me\"\n          containerClassName=\"pagination\"\n          activeClassName=\"active\"\n        />\n      </UserPagination>\n    </UserRepos>\n  );\n}\n\nexport default Repositories;\n","import React from 'react';\nimport Repositories from './Repositories';\nimport { UserAsideContent } from '../styles/styles';\nimport Empty from '../pages/Empty';\n\nfunction Content() {\n  return (\n    <UserAsideContent>\n      <Empty />\n      <Repositories />\n    </UserAsideContent>\n  );\n}\n\nexport default Content;\n","import React from 'react';\nimport Aside from './../components/Aside';\nimport Content from './../components/Content';\nimport { UserMain } from '../styles/styles';\n\nfunction User() {\n  return (\n    <>\n      <UserMain>\n        <Aside />\n        <Content />\n      </UserMain>\n    </>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport Empty from '../pages/Empty';\nimport User from '../pages/User';\n\nexport const publicRoutes = [\n  {\n    path: process.env.REACT_APP_USER_ROUTE,\n    Component: User,\n  },\n  {\n    path: process.env.REACT_APP_HOME_ROUTE,\n    Component: Empty,\n  },\n];\n","import { Switch, Route, Redirect } from 'react-router';\nimport { publicRoutes } from './routes';\n\nconst AppRouter = () => (\n  <Switch>\n    {publicRoutes.map(({ path, Component }) => (\n      <Route key={path} path={path} component={Component} exact />\n    ))}\n    <Redirect to={process.env.REACT_APP_HOME_ROUTE}/>\n  </Switch>\n);\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport { faSearch, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Navbar from './components/Navbar';\nimport AppRoutes from './routers/AppRoutes';\nimport { AppContainer, AppSpinner } from './styles/styles';\n\nexport const Trigger = React.createContext({});\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState('');\n  const [localPath, setLocalPath] = useState(`${process.env.REACT_APP_HOME_ROUTE}`);\n  const [localSpinner, setLocalSpinner] = useState(false);\n  const [localUser, setLocalUser] = useState('');\n  const [notFound] = useState('Not Found');\n  const [localRepoPage, setLocalRepoPage] = useState(1);\n  const [localRepoSize, setLocalRepoSize] = useState(4);\n  const [startRepos, setLocalStartRepos] = useState(0);\n  const [endRepos, setLocalEndRepos] = useState(0);\n  const [allPage, setLocalAllPage] = useState(0);\n  const [localIcon, setLocalIcon] = useState(\n    <FontAwesomeIcon icon={faSearch} />\n  );\n  const [localText, setLocalText] = useState(\n    'Start with searching a GitHub user'\n  );\n  if (!JSON.parse(sessionStorage.getItem('repos')) || JSON.parse(!sessionStorage.getItem('user'))) {\n      console.log(\"start\")\n      debugger\n      sessionStorage.setItem('user', JSON.stringify({}));\n    sessionStorage.setItem('repos', JSON.stringify([]));\n  }\n  useEffect(() => {\n    window.addEventListener('unload', () => {\n      sessionStorage.removeItem('user');\n      sessionStorage.removeItem('repos');\n    });\n  }, []);\n  return (\n    <AppContainer>\n      <Trigger.Provider\n        value={{\n          searchInput,\n          setSearchInput,\n          localRepoPage,\n          localRepoSize,\n          startRepos,\n          endRepos,\n          allPage,\n          setLocalRepoPage,\n          setLocalStartRepos,\n          setLocalEndRepos,\n          setLocalAllPage,\n          setLocalRepoSize,\n          setLocalSpinner,\n          localPath,\n          setLocalPath,\n          localUser,\n          setLocalUser,\n          notFound,\n          localIcon,\n          setLocalIcon,\n          localText,\n          setLocalText,\n        }}>\n        <Navbar />\n        {localSpinner ? (\n          <AppSpinner>\n            <FontAwesomeIcon icon={faSpinner} spin />\n          </AppSpinner>\n        ) : (\n          <AppRoutes />\n        )}\n      </Trigger.Provider>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\n\nconst theme = {\n  primary: '#0064EB',\n  text: '#000',\n  icons: '#808080',\n  background: '#E5E5E5',\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}